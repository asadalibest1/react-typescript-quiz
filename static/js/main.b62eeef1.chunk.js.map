{"version":3,"sources":["components/header.tsx","components/store/store.tsx","components/welcome.tsx","components/level.tsx","components/startQuiz.tsx","components/Api/api.tsx","components/helper.tsx","components/quiz.tsx","components/result.tsx","App1.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","className","Data","category","categoryName","difficulty","amount","pageNum","totalNum","State","createContext","reducer","state","action","type","payload","TransProvider","children","React","useReducer","data","dispatch","values","AddCategory","num","AddCategoryName","val","AddDifficulty","AddAmount","changePage","AddTotalNum","Provider","value","Welcome","useEffect","paper","document","querySelector","animate","opacity","duration","iterations","onfinish","style","useContext","selectOption","id","cat","_id","getElementById","innerText","setTimeout","onClick","Level","diff","StartQuiz","quizeDiv","toUpperCase","onChange","e","target","preventDefault","getApiData","a","fetch","api","json","results","shuffleArray","arr","sort","Math","random","filterData","map","item","question","answer","correct_answer","options","incorrect_answers","concat","colorList","ansbtn0","getElementsByClassName","ansbtn1","ansbtn2","ansbtn3","background","Quiz","useState","getData","setData","QuestionNo","setQuestionNo","setId","fetchData","toString","paperAnimate","optionNum","length","ind","key","selectRed","Result","animateDiv","text1","text2","href","App1","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b62eeef1.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../css/header.css'\r\n\r\nexport default function Header() {\r\n    \r\n    return (\r\n        <div>\r\n            <h1 className=\"main-header\">Quizzer</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, {createContext} from 'react'\r\nimport {ACTION_TYPE} from \"../types/quiz_types\";\r\n\r\nconst Data: any= {\r\n    category: 0,\r\n    categoryName: \"\",\r\n    difficulty: \"\",\r\n    amount: 10,\r\n    pageNum: 1,\r\n    totalNum: 0,\r\n};\r\n\r\nexport const State = createContext(Data);\r\n\r\nconst reducer = (state: typeof Data, action: ACTION_TYPE) =>{\r\n    switch(action.type){\r\n        \r\n       \r\n        case \"ADD_CAT\": {\r\n\r\n            return {\r\n                    ...state,\r\n                    category: action.payload,\r\n                    // img: action.payload2,\r\n                    // title: action.payload3\r\n                    } \r\n        \r\n        \r\n            }\r\n            case \"ADD_CAT_NAME\": {\r\n\r\n                return {\r\n                        ...state,\r\n                        categoryName: action.payload,\r\n                        } \r\n            \r\n            \r\n                }\r\n            case \"ADD_DIFF\": {\r\n\r\n                    return {\r\n                            ...state,\r\n                            difficulty: action.payload,\r\n                            } \r\n            \r\n            }\r\n            case \"ADD_AMOUNT\": {\r\n\r\n                return {\r\n                        ...state,\r\n                        amount: action.payload,\r\n                        } \r\n        \r\n        }\r\n        case \"CHANGE_PAGE\": {\r\n\r\n            return {\r\n                    ...state,\r\n                    pageNum: action.payload,\r\n                    } \r\n        \r\n        \r\n            }\r\n            case \"ADD_TOTALNUM\": {\r\n\r\n                return {\r\n                        ...state,\r\n                        totalNum: action.payload,\r\n                        } \r\n            \r\n            \r\n                }\r\n    default : return state;     \r\n            \r\n}\r\n};\r\n\r\nexport const TransProvider: any = ({children}: any) =>{\r\n    let [data, dispatch] = React.useReducer(reducer, Data);\r\n    \r\n\r\nconst AddCategory = (num: number) =>{\r\n    dispatch({\r\n        type: \"ADD_CAT\",\r\n        payload: num,\r\n    })\r\n\r\n}\r\nconst AddCategoryName = (val: string) =>{\r\n    dispatch({\r\n        type: \"ADD_CAT_NAME\",\r\n        payload: val,\r\n    })\r\n\r\n}\r\nconst AddDifficulty = (val: string) =>{\r\n    dispatch({\r\n        type: \"ADD_DIFF\",\r\n        payload: val,\r\n    })\r\n\r\n}\r\nconst AddAmount = (num: number) =>{\r\n    dispatch({\r\n        type: \"ADD_AMOUNT\",\r\n        payload: num,\r\n    })\r\n\r\n}\r\nconst changePage = (num: number) =>{\r\n    dispatch({\r\n        type: \"CHANGE_PAGE\",\r\n        payload: num,\r\n    })\r\n\r\n}\r\nconst AddTotalNum = (num: number) =>{\r\n    dispatch({\r\n        type: \"ADD_TOTALNUM\",\r\n        payload: num,\r\n    })\r\n\r\n}\r\nconst values ={\r\n    data,\r\n    AddCategory,\r\n    AddCategoryName,\r\n    AddDifficulty,\r\n    AddAmount,\r\n    changePage,\r\n    AddTotalNum,\r\n}\r\n\r\n    return(\r\n        <>\r\n\r\n        <State.Provider value={values}>\r\n                {children}\r\n        </State.Provider>\r\n        \r\n        </>\r\n        \r\n    )\r\n}","import React from 'react'\r\nimport \"../css/welcome.css\"\r\nimport {State} from \"./store/store\"\r\n\r\nexport default function Welcome() {\r\n\r\n    React.useEffect(()=>{\r\n        function animate(){\r\n         const paper: any = document.querySelector(\".paper\");\r\n     const Animate = paper.animate([\r\n        {opacity: \"1\"},\r\n         // {transform: \"translate(-1000px, 0)\"},\r\n     ],{\r\n         duration: 900,\r\n         iterations: 1,\r\n     }\r\n     )\r\n     Animate.onfinish = ()=> paper.style.opacity= \"1\";\r\n     }\r\n        animate()\r\n         },[])\r\n\r\nconst paperAnimate =()=>{\r\n        const paper: any = document.querySelector(\".paper\");\r\n        paper.animate([\r\n            {opacity: \"0\"},\r\n        ],{\r\n            duration: 200,\r\n            iterations: 1,\r\n        })}\r\n\r\nconst {AddCategory, AddCategoryName, changePage} = React.useContext(State);\r\n    \r\n    const selectOption =(id: any, cat: any)=>{\r\n        const _id: any = document.getElementById(id);\r\n        AddCategoryName(_id.innerText);\r\n        AddCategory(cat)\r\n    \r\n        paperAnimate();\r\n        setTimeout(()=>{\r\n            changePage(2)\r\n        }, 200)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"main-welcome-div\">\r\n            <div className=\"paper\">\r\n                <h2>Welcome to my Quiz App</h2>\r\n                <p>Which type of Quiz you want to Start?</p>\r\n                <div className=\"quize-list\">\r\n\r\n                    <span className=\"feild-style\" id=\"cat1\"onClick={()=>{selectOption(\"cat1\", 22)}}>Geography</span>                    \r\n                    <span className=\"feild-style\" id=\"cat1\"onClick={()=>{selectOption(\"cat1\", 18)}}>IT</span>\r\n                    <span className=\"feild-style\" id=\"cat2\"onClick={()=>{selectOption(\"cat2\", 21)}}>Sports</span>\r\n                    <span className=\"feild-style\" id=\"cat3\"onClick={()=>{selectOption(\"cat3\", 23)}}>History</span>\r\n                    <span className=\"feild-style\" id=\"cat4\"onClick={()=>{selectOption(\"cat4\", 17)}}>Science & Nature</span>\r\n                    <span className=\"feild-style\" id=\"cat5\"onClick={()=>{selectOption(\"cat5\", 9)}}>General Knowledge</span>\r\n                </div>\r\n            </div>\r\n            {/* </CSSTransition> */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"../css/level.css\"\r\nimport \"../css/animatedButtons.css\"\r\nimport {State} from \"./store/store\"\r\n\r\nexport default function Level() {\r\n    const {AddDifficulty, changePage} = React.useContext(State);\r\n    \r\n    React.useEffect(()=>{\r\n        function animate(){\r\n         const paper: any = document.querySelector(\".paper\");\r\n     const Animate = paper.animate([\r\n        {opacity: \"1\"},\r\n         // {transform: \"translate(-1000px, 0)\"},\r\n     ],{\r\n         duration: 400,\r\n         iterations: 1,\r\n     }\r\n     )\r\n     Animate.onfinish = ()=> paper.style.opacity= \"1\";\r\n     }\r\n        animate()\r\n         },[])\r\n\r\nconst paperAnimate =()=>{\r\n        const paper: any = document.querySelector(\".paper\");\r\n        paper.animate([\r\n            {opacity: \"0\"},\r\n            // {transform: \"translate(-1000px, 0)\"},\r\n        ],{\r\n            duration: 200,\r\n            iterations: 1,\r\n        })}\r\n\r\nconst selectOption =(diff: string)=>{\r\n        AddDifficulty(diff)\r\n        paperAnimate();\r\n        setTimeout(()=>{\r\n            changePage(3)\r\n        }, 200)\r\n    }\r\n         \r\n    return (\r\n        <div className=\"main-level-div\">\r\n            <div className=\"paper\">\r\n                <h2>Choose your Level!</h2>\r\n            <div className=\"level\">\r\n                <div className=\"section__box\" onClick={()=>{selectOption(\"easy\")}}>\r\n                    <button className=\"r-button ai-element ai-element_type1 ai-element4\">\r\n                        <span className=\"ai-element__label level-button\">Easy</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"section__box\" onClick={()=>{selectOption(\"medium\")}}>\r\n                    <button className=\"r-button ai-element ai-element_type1 ai-element4\">\r\n                        <span className=\"ai-element__label level-button\">Medium</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"section__box\" onClick={()=>{selectOption(\"hard\")}}>\r\n                    <button className=\"r-button ai-element ai-element_type1 ai-element4\">\r\n                        <span className=\"ai-element__label level-button\">Hard</span>\r\n                    </button>\r\n                </div>\r\n        </div>\r\n\r\n        </div>\r\n        </div >\r\n    )\r\n}\r\n","import React, { FormEvent } from 'react'\r\nimport \"../css/startQuiz.css\"\r\nimport \"../css/animatedButtons.css\"\r\nimport {State} from \"./store/store\"\r\n\r\n//  Type\r\ntype __FormEvent = React.FormEvent<EventTarget>;\r\ntype __ChangeEvent = React.ChangeEvent<HTMLInputElement>;\r\n\r\nexport default function StartQuiz() {\r\n    const {data, AddAmount, changePage} = React.useContext(State);\r\n    const {categoryName, difficulty, amount} = data;\r\n\r\n    React.useEffect(()=>{\r\n        function animate(){\r\n         const quizeDiv: any = document.querySelector(\".start-quiz-div\");\r\n            const Animate = quizeDiv.animate([\r\n                {opacity: \"1\"},\r\n            ],{\r\n                duration: 1000,\r\n                iterations: 1,\r\n            }\r\n            )\r\n            Animate.onfinish = ()=> quizeDiv.style.opacity= \"1\";\r\n            }\r\n            animate()\r\n                },[])\r\n\r\n    const paperAnimate =()=>{\r\n        const quizeDiv: any = document.querySelector(\".start-quiz-div\");\r\n        quizeDiv.animate([\r\n            {opacity: \"0\"},\r\n        ],{\r\n            duration: 400,\r\n            iterations: 1,\r\n        })}\r\n\r\n    const selectOption =()=>{\r\n            paperAnimate();\r\n            setTimeout(()=>{\r\n                changePage(4)\r\n            }, 200)\r\n    }\r\n\r\n    return (\r\n        <div className=\"start-quiz-div\">\r\n            <h1>\r\n                You Selected <span className=\"data\">\"{categoryName}\"</span> for your Quiz.\r\n            </h1>\r\n            <h1>\r\n            Your Difficulty Level will be <span className=\"data\">\"{difficulty.toUpperCase()}\"</span>.\r\n            </h1>\r\n            <div className=\"input1 para\">Pleaze enter the Number of your qustions<br  />you want in your quiz.\r\n            </div>\r\n            <div className=\"input1\">\r\n            <input type=\"number\" value={amount} onChange={(e: __ChangeEvent)=>{AddAmount(e.target.value)}} className=\"quiz-number\"/> \r\n            </div>\r\n        <div className=\"buttons\">\r\n        {/* <div className=\"section__box section__box001\">\r\n\t\t\t<button className=\"r-button ai-element ai-element_type3 ai-element6\">\r\n\t\t\t\t<span className=\"ai-element__label ai-element__label001\">Start Quiz</span>\r\n\t\t\t</button>\t\t\r\n            </div> */}\r\n        \r\n            <div className=\"container1 section__box001\" onClick={(e: __FormEvent)=>{e.preventDefault(); selectOption()}}>\r\n            <span className=\"btn\">Start Quiz</span>\r\n            </div>\r\n        \r\n            <div className=\"section__box section__box001\" onClick={()=>{changePage(1)}}>\r\n\t\t\t<button className=\"r-button ai-element ai-element_type3 ai-element8\">\r\n\t\t\t\t<span className=\"ai-element__label ai-element__label001\">Go Back</span>\r\n\t\t\t</button>\t\t\r\n            </div>\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {dataType, filterDataType} from \"../types/quiz_types\"\r\n\r\nexport const getApiData = async(amount: number, category: number, difficulty: string): Promise<dataType>=>{\r\n\r\n   \r\n    const api = await fetch(`https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}&type=multiple`)\r\n    const {results}= await api.json();\r\n    const shuffleArray = (arr: string[]) =>\r\n    [...arr].sort(()=> Math.random() - 0.5);\r\n\r\n    const filterData: dataType= results.map((item: dataType)=>{\r\n        return {\r\n         question: item.question,\r\n         answer: item.correct_answer,\r\n         options: shuffleArray(item.incorrect_answers.concat(item.correct_answer)),\r\n        }\r\n    });\r\n    \r\n    return filterData; \r\n}","export const colorList =()=>{\r\n    const ansbtn0: any = document.getElementsByClassName(\"answer-button\")[0];\r\n    const ansbtn1: any = document.getElementsByClassName(\"answer-button\")[1];\r\n    const ansbtn2: any = document.getElementsByClassName(\"answer-button\")[2];\r\n    const ansbtn3: any = document.getElementsByClassName(\"answer-button\")[3];\r\n\r\n    ansbtn0.style.background = \"#cb997e\";\r\n    ansbtn1.style.background = \"#cb997e\";\r\n    ansbtn2.style.background = \"#cb997e\";\r\n    ansbtn3.style.background = \"#cb997e\";\r\n}","import React from 'react'\r\nimport \"../css/quiz.css\"\r\nimport \"../css/loader.css\"\r\nimport \"../css/quizButtons.scss\"\r\nimport {getApiData} from \"./Api/api\"\r\nimport {filterDataType, dataType} from \"./types/quiz_types\"\r\nimport {State} from \"./store/store\"\r\nimport {colorList} from \"./helper\"\r\n\r\n\r\nexport default function Quiz() {\r\n    const [getData, setData] = React.useState<filterDataType[]>([]);\r\n    const [QuestionNo, setQuestionNo] = React.useState(0);\r\n    const [id, setId] = React.useState <number|null> (null);\r\n\r\n    const {data, AddTotalNum, changePage} = React.useContext(State);\r\n    const {category, difficulty, amount, totalNum} = data;\r\n\r\n    React.useEffect(()=>{\r\n        function animate(){\r\n         const paper: any = document.querySelector(\".paper\");\r\n     const Animate = paper.animate([\r\n        {opacity: \"1\"},\r\n         // {transform: \"translate(-1000px, 0)\"},\r\n     ],{\r\n         duration: 400,\r\n         iterations: 1,\r\n     }\r\n     )\r\n     Animate.onfinish = ()=> paper.style.opacity= \"1\";\r\n     }\r\n        animate();\r\n    \r\n        const fetchData = async ()=> {\r\n            var Data: any = await getApiData(amount, category, difficulty);\r\n            setData(Data);\r\n        }\r\n        fetchData();\r\n         },[])\r\n\r\nconst changeQuiz = ()=>{\r\n\r\n    colorList();\r\n    setId(null);\r\n    selectOption();\r\n    if(QuestionNo !== (getData.length -1)){\r\n        setQuestionNo(QuestionNo + 1)\r\n    }else{\r\n        paperAnimate();\r\n        setTimeout(()=>{\r\n            changePage(5)\r\n        }, 200)\r\n    }\r\n        }\r\nconst selectOption =()=>{\r\n    if(id !== null){\r\n            const _id: any = document.getElementById(id.toString());\r\n            if (_id.innerText === getData[QuestionNo].answer){\r\n                AddTotalNum(totalNum + 1)        \r\n    }\r\n    }\r\n}\r\nconst paperAnimate =()=>{\r\n    const paper: any = document.querySelector(\".paper\");\r\n    const Animate = paper.animate([\r\n        {opacity: \"0\"},\r\n    ],{\r\n        duration: 200,\r\n        iterations: 1,\r\n    })}\r\n\r\nlet optionNum = 0;\r\nconst selectRed =(id: any)=>{\r\n        \r\n    colorList();\r\n    const getClass: any = document.getElementsByClassName(\"answer-button\")[id];\r\n    getClass.style.background = \"red\";\r\n        \r\n    setId(id);\r\n    }\r\n    return (\r\n        <div className=\"main-quiz-div\">\r\n            <div className=\"paper\">\r\n                {\r\n                (!getData.length) ?\r\n                    \r\n                    <div className=\"loader-div\"><div className=\"loader\"></div></div>\r\n                :\r\n                        <>\r\n                        <h2>Question # {QuestionNo + 1}/{amount}</h2>\r\n                        <p>Q:{QuestionNo + 1} {getData[QuestionNo].question}</p>\r\n                        {getData[QuestionNo].options.map((item: string, ind: number)=>{\r\n                            return(\r\n                                <div\r\n                                className=\"answer-button\"\r\n                                key={ind}\r\n                                id=\"ansBtn\">\r\n                                {optionNum = optionNum + 1}) <div\r\n\r\n                                id={ind.toString()}\r\n                                onClick={()=>{selectRed(ind)}}>\r\n                                {item}\r\n                                </div>\r\n                                \r\n                                </div>\r\n                                )\r\n                        })}\r\n                        <button className=\"learn-more\" onClick={changeQuiz}>Next Question</button>\r\n                        </>    \r\n                }            \r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import React, { FormEvent } from 'react'\r\nimport \"../css/result.css\"\r\nimport \"../css/animatedButtons.css\"\r\nimport {State} from \"./store/store\"\r\n\r\n//  Type\r\ntype __FormEvent = React.FormEvent<EventTarget>;\r\n\r\nexport default function Result() {\r\n\r\n    React.useEffect(()=>{\r\n        function animate(){\r\n         const animateDiv: any = document.querySelector(\".start-result-div\");\r\n            const Animate = animateDiv.animate([\r\n                {opacity: \"1\"},\r\n            ],{\r\n                duration: 1000,\r\n                iterations: 1,\r\n            }\r\n            )\r\n            Animate.onfinish = ()=> animateDiv.style.opacity= \"1\";\r\n            }\r\n            animate()\r\n                },[])\r\n                \r\n    const {data, changePage, AddTotalNum} = React.useContext(State);\r\n    const {categoryName, amount, totalNum} = data;\r\n    let text1: string = \"\";\r\n    let text2: string = \"\";\r\n    const percentage: Number = totalNum*100/amount;\r\n    if(percentage >= 60){\r\n        text1 = \"Congratulations!\"\r\n        text2 = \"succeed\"}\r\n        else{\r\n        text1 = \"It Looks! \";\r\n        text2 = \"need some improvement\"\r\n    }\r\n    return (\r\n        <div className=\"start-result-div\">\r\n            <h1>\r\n             <span>{text1}</span> you {text2} for the {categoryName} Quiz.\r\n            </h1>\r\n            <h1>\r\n            By <span>{totalNum}/{amount}</span>\r\n            </h1>\r\n            \r\n            <div className=\"container1 section__box001\">\r\n            <a href=\"javascript:void(0)\" className=\"btn btn-8\" onClick={(e: __FormEvent)=>{e.preventDefault(); AddTotalNum(0); changePage(1)}}>Try more Quizes</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './App1.css'\r\nimport Header from './components/header'\r\nimport Welcome from './components/welcome'\r\nimport Level from './components/level'\r\nimport StartQuiz from './components/startQuiz'\r\nimport Quiz from './components/quiz'\r\nimport Result from './components/result';\r\nimport {State} from './components/store/store'\r\n\r\nexport default function App1() {\r\n    const {data} = React.useContext(State);\r\n    const {pageNum} = data;\r\n\r\n    return (\r\n<div className=\"main-wallpaper\">\r\n    \r\n    <Header />\r\n    {(pageNum === 1) ? <Welcome /> : false}\r\n    {(pageNum === 2) ? <Level /> : false}\r\n    {(pageNum === 3) ? <StartQuiz /> : false}\r\n    {(pageNum === 4) ? <Quiz /> : false}\r\n    {(pageNum === 5) ? <Result /> : false}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport App1 from './App1'\r\nimport {TransProvider} from './components/store/store'\r\n\r\nexport default function App() {\r\n    return (\r\n        <div>\r\n            <TransProvider>\r\n            <App1 />\r\n            </TransProvider>\r\n        </div>\r\n    )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n// import App from './prac/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}