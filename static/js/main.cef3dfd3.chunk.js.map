{"version":3,"sources":["components/header.tsx","components/store/store.tsx","components/welcome.tsx","components/level.tsx","components/startQuiz.tsx","components/Api/api.tsx","components/quiz.tsx","components/result.tsx","App1.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","className","Data","category","categoryName","difficulty","amount","pageNum","fetchCondition","State","createContext","reducer","state","action","type","payload","TransProvider","children","React","useReducer","data","dispatch","values","AddCategory","num","AddCategoryName","val","AddDifficulty","AddAmount","changePage","setFetchCondition","boolean","Provider","value","Welcome","useEffect","paper","document","querySelector","animate","opacity","duration","iterations","onfinish","style","useContext","selectOption","id","cat","_id","getElementById","innerText","setTimeout","onClick","Level","diff","StartQuiz","quizeDiv","toUpperCase","onChange","e","target","href","getApiData","a","fetch","api","json","results","shuffleArray","arr","sort","Math","random","filterData","map","item","question","answer","correct_answer","options","incorrect_answers","concat","Quiz","useState","getData","setData","QuestionNo","setQuestionNo","fetchData","optionNum","length","ind","key","toString","alert","result","App1","console","log","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"yYAGe,SAASA,IAEpB,OACI,6BACI,wBAAIC,UAAU,eAAd,Y,wBCLNC,EAAO,CACTC,SAAU,EACVC,aAAc,GACdC,WAAY,GACZC,OAAQ,GACRC,QAAS,EACTC,gBAAgB,GAGPC,EAAaC,wBAAcR,GAElCS,EAAU,SAACC,EAAYC,GACzB,OAAOA,EAAOC,MAEV,IAAK,UAED,OAAO,eACIF,EADX,CAEQT,SAAUU,EAAOE,UAOzB,IAAK,eAED,OAAO,eACIH,EADX,CAEQR,aAAcS,EAAOE,UAKjC,IAAK,WAEG,OAAO,eACIH,EADX,CAEQP,WAAYQ,EAAOE,UAInC,IAAK,aAED,OAAO,eACIH,EADX,CAEQN,OAAQO,EAAOE,UAI/B,IAAK,cAED,OAAO,eACIH,EADX,CAEQL,QAASM,EAAOE,UAOxB,IAAK,wBAED,OAAO,eACIH,EADX,CAEQJ,eAAgBK,EAAOE,UAK3C,QAAU,OAAOH,IAKRI,EAAqB,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,SAAkB,EAC3BC,IAAMC,WAAWR,EAAST,GADC,mBAC7CkB,EAD6C,KACvCC,EADuC,KAgDhDC,EAAQ,CACVF,OACAG,YA9CgB,SAACC,GACjBH,EAAS,CACLP,KAAM,UACNC,QAASS,KA4CbC,gBAtCoB,SAACC,GACrBL,EAAS,CACLP,KAAM,eACNC,QAASW,KAoCbC,cAhCkB,SAACD,GACnBL,EAAS,CACLP,KAAM,WACNC,QAASW,KA8BbE,UA1Bc,SAACJ,GACfH,EAAS,CACLP,KAAM,aACNC,QAASS,KAwBbK,WApBe,SAACL,GAChBH,EAAS,CACLP,KAAM,cACNC,QAASS,KAkBbM,kBAdsB,SAACC,GACvBV,EAAS,CACLP,KAAM,wBACNC,QAASgB,MAcb,OACI,oCAEA,kBAACtB,EAAMuB,SAAP,CAAgBC,MAAOX,GACdL,KCrIF,SAASiB,IAEpBhB,IAAMiB,WAAU,YACZ,WACC,IAAMC,EAAaC,SAASC,cAAc,UAC9BF,EAAMG,QAAQ,CAC3B,CAACC,QAAS,MAEX,CACEC,SAAU,IACVC,WAAY,IAGRC,SAAW,kBAAKP,EAAMQ,MAAMJ,QAAS,KAE1CD,KACG,IAEX,IAlBkC,EA2BiBrB,IAAM2B,WAAWpC,GAA7Dc,EA3B2B,EA2B3BA,YAAaE,EA3Bc,EA2BdA,gBAAiBI,EA3BH,EA2BGA,WAE3BiB,EAAc,SAACC,EAASC,GAC1B,IAAMC,EAAWZ,SAASa,eAAeH,GACzCtB,EAAgBwB,EAAIE,WACpB5B,EAAYyB,GAbOX,SAASC,cAAc,UACpCC,QAAQ,CACV,CAACC,QAAS,MACZ,CACEC,SAAU,IACVC,WAAY,IAWhBU,YAAW,WACPvB,EAAW,KACZ,MAGP,OACI,yBAAK5B,UAAU,oBACX,yBAAKA,UAAU,SACX,sDACA,oEACA,yBAAKA,UAAU,cAEX,0BAAMA,UAAU,cAAc8C,GAAG,OAAMM,QAAS,WAAKP,EAAa,OAAQ,MAA1E,aACA,0BAAM7C,UAAU,cAAc8C,GAAG,OAAMM,QAAS,WAAKP,EAAa,OAAQ,MAA1E,MACA,0BAAM7C,UAAU,cAAc8C,GAAG,OAAMM,QAAS,WAAKP,EAAa,OAAQ,MAA1E,UACA,0BAAM7C,UAAU,cAAc8C,GAAG,OAAMM,QAAS,WAAKP,EAAa,OAAQ,MAA1E,WACA,0BAAM7C,UAAU,cAAc8C,GAAG,OAAMM,QAAS,WAAKP,EAAa,OAAQ,MAA1E,oBACA,0BAAM7C,UAAU,cAAc8C,GAAG,OAAMM,QAAS,WAAKP,EAAa,OAAQ,KAA1E,wB,WCrDL,SAASQ,IAAS,IAAD,EACQpC,IAAM2B,WAAWpC,GAA9CkB,EADqB,EACrBA,cAAeE,EADM,EACNA,WAEtBX,IAAMiB,WAAU,YACZ,WACC,IAAMC,EAAaC,SAASC,cAAc,UAC9BF,EAAMG,QAAQ,CAC3B,CAACC,QAAS,MAEX,CACEC,SAAU,IACVC,WAAY,IAGRC,SAAW,kBAAKP,EAAMQ,MAAMJ,QAAS,KAE1CD,KACG,IAEX,IAcMO,EAAc,SAACS,GACb5B,EAAc4B,GAdKlB,SAASC,cAAc,UACpBC,QAAQ,CAC1B,CAACC,QAAS,MAEZ,CACEC,SAAU,IACVC,WAAY,IAUhBU,YAAW,WACPvB,EAAW,KACZ,MAGP,OACI,yBAAK5B,UAAU,kBACX,yBAAKA,UAAU,SACX,kDAEJ,yBAAKA,UAAU,SACX,yBAAKA,UAAU,eAAeoD,QAAS,WAAKP,EAAa,UACrD,4BAAQ7C,UAAU,oDACd,0BAAMA,UAAU,qBAAhB,UAGR,yBAAKA,UAAU,eAAeoD,QAAS,WAAKP,EAAa,YACrD,4BAAQ7C,UAAU,oDACd,0BAAMA,UAAU,qBAAhB,YAGR,yBAAKA,UAAU,eAAeoD,QAAS,WAAKP,EAAa,UACrD,4BAAQ7C,UAAU,oDACd,0BAAMA,UAAU,qBAAhB,a,MC1DT,SAASuD,IAAa,IAAD,EACyBtC,IAAM2B,WAAWpC,GAAnEW,EADyB,EACzBA,KAAMQ,EADmB,EACnBA,UAAWC,EADQ,EACRA,WACjBzB,GAFyB,EACI0B,kBACOV,EAApChB,cAAcC,EAAsBe,EAAtBf,WAAYC,EAAUc,EAAVd,OAEjCY,IAAMiB,WAAU,YACZ,WACC,IAAMsB,EAAgBpB,SAASC,cAAc,mBAC1BmB,EAASlB,QAAQ,CAC7B,CAACC,QAAS,MACZ,CACEC,SAAU,IACVC,WAAY,IAGRC,SAAW,kBAAKc,EAASb,MAAMJ,QAAS,KAEhDD,KACM,IAEd,IASMO,EAAc,WARMT,SAASC,cAAc,mBACpCC,QAAQ,CACb,CAACC,QAAS,MACZ,CACEC,SAAU,IACVC,WAAY,IAKZU,YAAW,WACPvB,EAAW,KACZ,MAGX,OACI,yBAAK5B,UAAU,kBACX,4CACiB,0BAAMA,UAAU,QAAhB,IAAyBG,EAAzB,KADjB,mBAGA,6DAC8B,0BAAMH,UAAU,QAAhB,IAAyBI,EAAWqD,cAApC,KAD9B,KAGA,yBAAKzD,UAAU,eAAf,2CAAqE,6BAArE,0BAEA,yBAAKA,UAAU,UACf,2BAAOa,KAAK,SAASmB,MAAO3B,EAAQqD,SAAU,SAACC,GAAKhC,EAAUgC,EAAEC,OAAO5B,QAAShC,UAAU,iBAE9F,yBAAKA,UAAU,WAOX,yBAAKA,UAAU,6BAA6BoD,QAAS,WAAKP,MAC1D,uBAAGgB,KAAK,IAAI7D,UAAU,OAAtB,eAGA,yBAAKA,UAAU,gCACxB,4BAAQA,UAAU,oDACjB,0BAAMA,UAAU,0CAAhB,e,iDChES8D,EAAU,uCAAG,WAAMzD,EAAgBH,EAAkBE,GAAxC,uBAAA2D,EAAA,sEAGJC,MAAM,sCAAD,OAAuC3D,EAAvC,qBAA0DH,EAA1D,uBAAiFE,EAAjF,mBAHD,cAGhB6D,EAHgB,gBAIOA,EAAIC,OAJX,uBAIfC,EAJe,EAIfA,QAEDC,EAAe,SAACC,GAAD,OACrB,YAAIA,GAAKC,MAAK,kBAAKC,KAAKC,SAAW,OAG7BC,EAAkBN,EAAQO,KAAI,SAACC,GACjC,MAAO,CACNC,SAAUD,EAAKC,SACfC,OAAQF,EAAKG,eACbC,QAASX,EAAaO,EAAKK,kBAAkBC,OAAON,EAAKG,qBAdxC,kBAkBfL,GAlBe,4CAAH,0DCKR,SAASS,IAAQ,IAAD,EACAjE,IAAMkE,SAA2B,IADjC,mBACpBC,EADoB,KACXC,EADW,OAESpE,IAAMkE,SAAS,GAFxB,mBAEpBG,EAFoB,KAERC,EAFQ,KAIpBpE,EAAQF,IAAM2B,WAAWpC,GAAzBW,KACAjB,EAAgDiB,EAAhDjB,SAAUE,EAAsCe,EAAtCf,WAAYC,EAA0Bc,EAA1Bd,OAA0Bc,EAAlBZ,eAErCU,IAAMiB,WAAU,YACZ,WACC,IAAMC,EAAaC,SAASC,cAAc,UAC9BF,EAAMG,QAAQ,CAC3B,CAACC,QAAS,MAEX,CACEC,SAAU,IACVC,WAAY,IAGRC,SAAW,kBAAKP,EAAMQ,MAAMJ,QAAS,KAE1CD,GAEe,uCAAG,4BAAAyB,EAAA,sEACOD,EAAWzD,EAAQH,EAAUE,GADpC,OACVH,EADU,OAEdoF,EAAQpF,GAFM,2CAAH,oDAIfuF,KACG,IAEX,IAWIC,EAAY,EACZ,OACI,yBAAKzF,UAAU,iBACX,yBAAKA,UAAU,SAGToF,EAAQM,OAGF,oCACI,0CAAgBJ,EAAa,EAA7B,IAAiCjF,GAErC,gCAAMiF,EAAa,EAAnB,IAAuBF,EAAQE,GAAYV,UAC1CQ,EAAQE,GAAYP,QAAQL,KAAI,SAACC,EAAcgB,GAC5C,OACI,yBAAK3F,UAAU,gBAAgB4F,IAAKD,GACnCF,GAAwB,EADzB,KAC6B,yBAC5B3C,GAAI6C,EAAIE,WAAYzC,QAAS,YAtB1C,SAACN,GACjB,IAAME,EAAWZ,SAASa,eAAeH,GACzCgD,MAAM9C,EAAIE,WAoBqDL,CAAa8C,KAAQhB,OAKhE,4BAAQ3E,UAAU,aAAaoD,QAjCpC,WACdkC,IAAgBF,EAAQM,OAAQ,EAC7BH,EAAcD,EAAa,GAE3BQ,MAAM,mBA6BU,kBAfJ,6C,MCjDL,SAASC,IACpB,OACI,yBAAK/F,UAAU,oBACX,4BACC,kDADD,6BAGA,kCACG,uCAGH,yBAAKA,UAAU,8BACf,uBAAG6D,KAAK,IAAI7D,UAAU,OAAtB,qBCPG,SAASgG,IAAQ,IAGrB1F,EADQW,IAAM2B,WAAWpC,GAAzBW,KACAb,QACP,OACJ,yBAAKN,UAAU,kBAEX,kBAACD,EAAD,MACc,IAAZO,GAAiB,kBAAC2B,EAAD,MACL,IAAZ3B,GAAiB,kBAAC+C,EAAD,MACL,IAAZ/C,GAAiB,kBAACiD,EAAD,MACL,IAAZjD,GAAiB,kBAAC4E,EAAD,MACL,IAAZ5E,GAAiB,kBAAC,EAAD,MACtB2F,QAAQC,IAAI5F,ICnBE,SAAS6F,IACpB,OACI,6BACI,kBAAC,EAAD,KACA,kBAAC,EAAD,QCIQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACR,EAAD,OAEF/D,SAASa,eAAe,SD+HpB,kBAAmB2D,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlB,QAAQkB,MAAMA,EAAMC,c","file":"static/js/main.cef3dfd3.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../css/header.css'\r\n\r\nexport default function Header() {\r\n    \r\n    return (\r\n        <div>\r\n            <h1 className=\"main-header\">Quizzer</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, {createContext} from 'react'\r\n\r\nconst Data = {\r\n    category: 0,\r\n    categoryName: \"\",\r\n    difficulty: \"\",\r\n    amount: 10,\r\n    pageNum: 1,\r\n    fetchCondition: false,\r\n};\r\n\r\nexport const State: any = createContext(Data);\r\n\r\nconst reducer = (state: any, action: any) =>{\r\n    switch(action.type){\r\n        \r\n        case \"ADD_CAT\": {\r\n\r\n            return {\r\n                    ...state,\r\n                    category: action.payload,\r\n                    // img: action.payload2,\r\n                    // title: action.payload3\r\n                    } \r\n        \r\n        \r\n            }\r\n            case \"ADD_CAT_NAME\": {\r\n\r\n                return {\r\n                        ...state,\r\n                        categoryName: action.payload,\r\n                        } \r\n            \r\n            \r\n                }\r\n            case \"ADD_DIFF\": {\r\n\r\n                    return {\r\n                            ...state,\r\n                            difficulty: action.payload,\r\n                            } \r\n            \r\n            }\r\n            case \"ADD_AMOUNT\": {\r\n\r\n                return {\r\n                        ...state,\r\n                        amount: action.payload,\r\n                        } \r\n        \r\n        }\r\n        case \"CHANGE_PAGE\": {\r\n\r\n            return {\r\n                    ...state,\r\n                    pageNum: action.payload,\r\n                    // img: action.payload2,\r\n                    // title: action.payload3\r\n                    } \r\n        \r\n        \r\n            }\r\n            case \"CHANGE_FETCHCONDITION\": {\r\n\r\n                return {\r\n                        ...state,\r\n                        fetchCondition: action.payload,\r\n                        } \r\n            \r\n            \r\n                }\r\n    default : return state;     \r\n            \r\n}\r\n};\r\n\r\nexport const TransProvider: any = ({children}: any) =>{\r\n    let [data, dispatch] = React.useReducer(reducer, Data);\r\n    \r\n\r\nconst AddCategory = (num: number) =>{\r\n    dispatch({\r\n        type: \"ADD_CAT\",\r\n        payload: num,\r\n        // payload2: img,\r\n        // payload3: title,\r\n    })\r\n\r\n}\r\nconst AddCategoryName = (val: string) =>{\r\n    dispatch({\r\n        type: \"ADD_CAT_NAME\",\r\n        payload: val,\r\n    })\r\n\r\n}\r\nconst AddDifficulty = (val: string) =>{\r\n    dispatch({\r\n        type: \"ADD_DIFF\",\r\n        payload: val,\r\n    })\r\n\r\n}\r\nconst AddAmount = (num: number) =>{\r\n    dispatch({\r\n        type: \"ADD_AMOUNT\",\r\n        payload: num,\r\n    })\r\n\r\n}\r\nconst changePage = (num: number) =>{\r\n    dispatch({\r\n        type: \"CHANGE_PAGE\",\r\n        payload: num,\r\n    })\r\n\r\n}\r\nconst setFetchCondition = (boolean: boolean) =>{\r\n    dispatch({\r\n        type: \"CHANGE_FETCHCONDITION\",\r\n        payload: boolean,\r\n    })\r\n\r\n}\r\nconst values ={\r\n    data,\r\n    AddCategory,\r\n    AddCategoryName,\r\n    AddDifficulty,\r\n    AddAmount,\r\n    changePage,\r\n    setFetchCondition,\r\n}\r\n\r\n    return(\r\n        <>\r\n\r\n        <State.Provider value={values}>\r\n                {children}\r\n        </State.Provider>\r\n        \r\n        </>\r\n        \r\n    )\r\n}","import React from 'react'\r\nimport \"../css/welcome.css\"\r\nimport {State} from \"./store/store\"\r\n// import {CSSTransition} from \"react-transition-group\"\r\n// import useWebAnimations from \"@wellyshen/use-web-animations\";\r\n\r\nexport default function Welcome() {\r\n\r\n    React.useEffect(()=>{\r\n        function animate(){\r\n         const paper: any = document.querySelector(\".paper\");\r\n     const Animate = paper.animate([\r\n        {opacity: \"1\"},\r\n         // {transform: \"translate(-1000px, 0)\"},\r\n     ],{\r\n         duration: 900,\r\n         iterations: 1,\r\n     }\r\n     )\r\n     Animate.onfinish = ()=> paper.style.opacity= \"1\";\r\n     }\r\n        animate()\r\n         },[])\r\n\r\nconst paperAnimate =()=>{\r\n        const paper: any = document.querySelector(\".paper\");\r\n        paper.animate([\r\n            {opacity: \"0\"},\r\n        ],{\r\n            duration: 200,\r\n            iterations: 1,\r\n        })}\r\n\r\nconst {AddCategory, AddCategoryName, changePage} = React.useContext(State);\r\n    \r\n    const selectOption =(id: any, cat: any)=>{\r\n        const _id: any = document.getElementById(id);\r\n        AddCategoryName(_id.innerText);\r\n        AddCategory(cat)\r\n    \r\n        paperAnimate();\r\n        setTimeout(()=>{\r\n            changePage(2)\r\n        }, 200)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"main-welcome-div\">\r\n            <div className=\"paper\">\r\n                <h2>Welcome to my Quiz App</h2>\r\n                <p>Which type of Quiz you want to Start?</p>\r\n                <div className=\"quize-list\">\r\n\r\n                    <span className=\"feild-style\" id=\"cat1\"onClick={()=>{selectOption(\"cat1\", 22)}}>Geography</span>                    \r\n                    <span className=\"feild-style\" id=\"cat1\"onClick={()=>{selectOption(\"cat1\", 18)}}>IT</span>\r\n                    <span className=\"feild-style\" id=\"cat2\"onClick={()=>{selectOption(\"cat2\", 21)}}>Sports</span>\r\n                    <span className=\"feild-style\" id=\"cat3\"onClick={()=>{selectOption(\"cat3\", 23)}}>History</span>\r\n                    <span className=\"feild-style\" id=\"cat4\"onClick={()=>{selectOption(\"cat4\", 17)}}>Science & Nature</span>\r\n                    <span className=\"feild-style\" id=\"cat5\"onClick={()=>{selectOption(\"cat5\", 9)}}>General Knowledge</span>\r\n                </div>\r\n            </div>\r\n            {/* </CSSTransition> */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"../css/level.css\"\r\nimport \"../css/animatedButtons2.css\"\r\nimport {State} from \"./store/store\"\r\n\r\nexport default function Level() {\r\n    const {AddDifficulty, changePage} = React.useContext(State);\r\n    \r\n    React.useEffect(()=>{\r\n        function animate(){\r\n         const paper: any = document.querySelector(\".paper\");\r\n     const Animate = paper.animate([\r\n        {opacity: \"1\"},\r\n         // {transform: \"translate(-1000px, 0)\"},\r\n     ],{\r\n         duration: 400,\r\n         iterations: 1,\r\n     }\r\n     )\r\n     Animate.onfinish = ()=> paper.style.opacity= \"1\";\r\n     }\r\n        animate()\r\n         },[])\r\n\r\nconst paperAnimate =()=>{\r\n        const paper: any = document.querySelector(\".paper\");\r\n        const Animate = paper.animate([\r\n            {opacity: \"0\"},\r\n            // {transform: \"translate(-1000px, 0)\"},\r\n        ],{\r\n            duration: 200,\r\n            iterations: 1,\r\n        }\r\n        )\r\n        // Animate.onfinish = ()=> paper.style.opacity= \"0\";\r\n        }\r\n\r\n\r\nconst selectOption =(diff: string)=>{\r\n        AddDifficulty(diff)\r\n        paperAnimate();\r\n        setTimeout(()=>{\r\n            changePage(3)\r\n        }, 200)\r\n    }\r\n         \r\n    return (\r\n        <div className=\"main-level-div\">\r\n            <div className=\"paper\">\r\n                <h2>Choose your Level!</h2>\r\n                {/* <p>Which type of Quiz you want to Start?</p> */}\r\n            <div className=\"level\">\r\n                <div className=\"section__box\" onClick={()=>{selectOption(\"easy\")}}>\r\n                    <button className=\"r-button ai-element ai-element_type1 ai-element4\">\r\n                        <span className=\"ai-element__label\">Easy</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"section__box\" onClick={()=>{selectOption(\"medium\")}}>\r\n                    <button className=\"r-button ai-element ai-element_type1 ai-element4\">\r\n                        <span className=\"ai-element__label\">Medium</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"section__box\" onClick={()=>{selectOption(\"hard\")}}>\r\n                    <button className=\"r-button ai-element ai-element_type1 ai-element4\">\r\n                        <span className=\"ai-element__label\">Hard</span>\r\n                    </button>\r\n                </div>\r\n        </div>\r\n\r\n        </div>\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"../css/startQuiz.css\"\r\nimport \"../css/animatedButtons2.css\"\r\nimport {State} from \"./store/store\"\r\n\r\n\r\nexport default function StartQuiz() {\r\n    const {data, AddAmount, changePage, setFetchCondition} = React.useContext(State);\r\n    const {categoryName, difficulty, amount} = data;\r\n\r\n    React.useEffect(()=>{\r\n        function animate(){\r\n         const quizeDiv: any = document.querySelector(\".start-quiz-div\");\r\n            const Animate = quizeDiv.animate([\r\n                {opacity: \"1\"},\r\n            ],{\r\n                duration: 1000,\r\n                iterations: 1,\r\n            }\r\n            )\r\n            Animate.onfinish = ()=> quizeDiv.style.opacity= \"1\";\r\n            }\r\n            animate()\r\n                },[])\r\n\r\n    const paperAnimate =()=>{\r\n        const quizeDiv: any = document.querySelector(\".start-quiz-div\");\r\n        quizeDiv.animate([\r\n            {opacity: \"0\"},\r\n        ],{\r\n            duration: 400,\r\n            iterations: 1,\r\n        })}\r\n\r\n    const selectOption =()=>{\r\n            paperAnimate();\r\n            setTimeout(()=>{\r\n                changePage(4)\r\n            }, 200)\r\n    }\r\n\r\n    return (\r\n        <div className=\"start-quiz-div\">\r\n            <h1>\r\n                You Selected <span className=\"data\">\"{categoryName}\"</span> for your Quiz.\r\n            </h1>\r\n            <h1>\r\n            Your Difficulty Level will be <span className=\"data\">\"{difficulty.toUpperCase()}\"</span>.\r\n            </h1>\r\n            <div className=\"input1 para\">Pleaze enter the Number of your qustions<br  />you want in your quiz.\r\n            </div>\r\n            <div className=\"input1\">\r\n            <input type=\"number\" value={amount} onChange={(e)=>{AddAmount(e.target.value)}} className=\"quiz-number\"/> \r\n            </div>\r\n        <div className=\"buttons\">\r\n        {/* <div className=\"section__box section__box001\">\r\n\t\t\t<button className=\"r-button ai-element ai-element_type3 ai-element6\">\r\n\t\t\t\t<span className=\"ai-element__label ai-element__label001\">Start Quiz</span>\r\n\t\t\t</button>\t\t\r\n            </div> */}\r\n        \r\n            <div className=\"container1 section__box001\" onClick={()=>{selectOption()}}>\r\n            <a href=\"#\" className=\"btn\">Start Quiz</a>\r\n            </div>\r\n        \r\n            <div className=\"section__box section__box001\">\r\n\t\t\t<button className=\"r-button ai-element ai-element_type3 ai-element8\">\r\n\t\t\t\t<span className=\"ai-element__label ai-element__label001\">Go Back</span>\r\n\t\t\t</button>\t\t\r\n            </div>\r\n        </div>\r\n            \r\n        {/* <div className=\"container\"> */}\r\n        \r\n        {/* </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {dataType, filterDataType} from \"../types/quiz_types\"\r\n\r\nexport const getApiData = async(amount: number, category: number, difficulty: string): Promise<dataType>=>{\r\n\r\n   \r\n    const api = await fetch(`https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}&type=multiple`)\r\n    const {results}: any = await api.json();\r\n    \r\n    const shuffleArray = (arr: string[]) =>\r\n    [...arr].sort(()=> Math.random() - 0.5)\r\n\r\n\r\n    const filterData: any = results.map((item: dataType)=>{\r\n        return {\r\n         question: item.question,\r\n         answer: item.correct_answer,\r\n         options: shuffleArray(item.incorrect_answers.concat(item.correct_answer)),\r\n        }\r\n    });\r\n    \r\n    return filterData; \r\n}","import React from 'react'\r\nimport \"../css/quiz.css\"\r\nimport \"../css/quizButtons.scss\"\r\nimport {getApiData} from \"./Api/api\"\r\nimport {filterDataType} from \"./types/quiz_types\"\r\nimport {State} from \"./store/store\"\r\n\r\n\r\nexport default function Quiz() {\r\n    const [getData, setData] = React.useState<filterDataType[]>([]);\r\n    const [QuestionNo, setQuestionNo] = React.useState(0);\r\n\r\n    const {data} = React.useContext(State);\r\n    const {category, difficulty, amount, fetchCondition} = data;\r\n\r\n    React.useEffect(()=>{\r\n        function animate(){\r\n         const paper: any = document.querySelector(\".paper\");\r\n     const Animate = paper.animate([\r\n        {opacity: \"1\"},\r\n         // {transform: \"translate(-1000px, 0)\"},\r\n     ],{\r\n         duration: 400,\r\n         iterations: 1,\r\n     }\r\n     )\r\n     Animate.onfinish = ()=> paper.style.opacity= \"1\";\r\n     }\r\n        animate();\r\n    \r\n        const fetchData = async ()=>{\r\n            var Data: any= await getApiData(amount, category, difficulty);\r\n            setData(Data);\r\n        }\r\n        fetchData();\r\n         },[])\r\n\r\nconst changeQuiz = ()=>{\r\n    (QuestionNo !== (getData.length -1)) ?\r\n        setQuestionNo(QuestionNo + 1)\r\n        :\r\n        alert(\"Quiz Finished\");\r\n    }\r\nconst selectOption =(id: any)=>{\r\n    const _id: any = document.getElementById(id);\r\n    alert(_id.innerText);\r\n    // alert(id);\r\n}\r\nlet optionNum = 0;\r\n    return (\r\n        <div className=\"main-quiz-div\">\r\n            <div className=\"paper\">\r\n            {/* {console.log(data)} */}\r\n                {\r\n                (!getData.length) ?\r\n                    <h1>Loading....</h1>\r\n                :\r\n                        <>\r\n                            <h2>Question # {QuestionNo + 1}/{amount}</h2>\r\n\r\n                        <p>Q:{QuestionNo + 1} {getData[QuestionNo].question}</p>\r\n                        {getData[QuestionNo].options.map((item: string, ind: number)=>{\r\n                            return(\r\n                                <div className=\"answer-button\" key={ind}>\r\n                                {optionNum = optionNum + 1}) <div\r\n                                 id={ind.toString()} onClick={()=>{selectOption(ind)}}>{item}</div>\r\n                                \r\n                                </div>\r\n                                )\r\n                        })}\r\n                        <button className=\"learn-more\" onClick={changeQuiz} >Next Question</button>\r\n                        </>    \r\n                }            \r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"../css/result.css\"\r\nimport \"../css/animatedButtons2.css\"\r\nimport {State} from \"./store/store\"\r\n// const {AddCategory, AddDifficulty, AddAmount, } = React.useContext(State);\r\n\r\nexport default function result() {\r\n    return (\r\n        <div className=\"start-result-div\">\r\n            <h1>\r\n             <span>Congratulations!</span> you succeed in the Quiz.\r\n            </h1>\r\n            <h1>\r\n            By <span>8/10</span>\r\n            </h1>\r\n            \r\n            <div className=\"container1 section__box001\">\r\n            <a href=\"#\" className=\"btn\">Try more Quizes</a>\r\n            </div>\r\n        \r\n            {/* <div className=\"section__box section__box001\">\r\n\t\t\t<button className=\"r-button ai-element ai-element_type3 ai-element8\">\r\n\t\t\t\t<span className=\"ai-element__label ai-element__label001\">Go Back</span>\r\n\t\t\t</button>\t\t\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './App1.css'\r\nimport Header from './components/header'\r\nimport Welcome from './components/welcome'\r\nimport Level from './components/level'\r\nimport StartQuiz from './components/startQuiz'\r\nimport Quiz from './components/quiz'\r\nimport Result from './components/result';\r\nimport {State} from './components/store/store'\r\n\r\nexport default function App1() {\r\n\r\n    const {data} = React.useContext(State);\r\n    const {pageNum} = data;        \r\n    return (\r\n<div className=\"main-wallpaper\">\r\n    \r\n    <Header />\r\n    {(pageNum === 1) ? <Welcome /> : false}\r\n    {(pageNum === 2) ? <Level /> : false}\r\n    {(pageNum === 3) ? <StartQuiz /> : false}\r\n    {(pageNum === 4) ? <Quiz /> : false}\r\n    {(pageNum === 5) ? <Result /> : false}\r\n{console.log(pageNum)}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport App1 from './App1'\r\nimport {TransProvider} from './components/store/store'\r\n\r\nexport default function App() {\r\n    return (\r\n        <div>\r\n            <TransProvider>\r\n            <App1 />\r\n            </TransProvider>\r\n        </div>\r\n    )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n// import App from './prac/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}